/*
 *  Copyright 2021 Chris Margonis
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

buildscript {
    ext {
        kotlinVersion = '1.4.10'
        supportVersion = '1.3.0-alpha02'
        legacyv4Version = '1.0.0'
        workManagerVersion = '2.4.0'
        constraintVersion = '2.0.1'
        googleServices = '4.3.3'
        retrofit = '2.9.0'
        okhttp = '4.8.1'
        gson = '2.8.6'
        firebaseCrashlyticsPlugin = '2.3.0'
        firebaseCrashlyticsVersion = '17.2.1'
        firebaseCore = '17.5.0'
        androidGradlePlugin = '4.2.1'
        androidTestRunner = '1.3.0'
        espressoCore = '3.3.0'
        materialComponents = '1.3.0-alpha02'
    }

    ext.getImgurApiProperties = {
        Properties apiProps = new Properties()

        def propsFile = new File('apikeys.properties')
        if (!propsFile.exists()) {
            propsFile.createNewFile()
            propsFile << "imgur_client_id=placeholder\n"
            propsFile << "imgur_dw_album_id=placeholderId"
        }

        apiProps.load(new FileInputStream(propsFile))
        return apiProps
    }

    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:$androidGradlePlugin"
        classpath "com.google.gms:google-services:$googleServices"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "com.google.firebase:firebase-crashlytics-gradle:$firebaseCrashlyticsPlugin"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
